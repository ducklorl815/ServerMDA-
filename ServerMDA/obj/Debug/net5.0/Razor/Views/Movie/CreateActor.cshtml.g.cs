#pragma checksum "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b0cdc6a4785949adba4ade1c079adb26ecef1932"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Movie_CreateActor), @"mvc.1.0.view", @"/Views/Movie/CreateActor.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\_ViewImports.cshtml"
using ServerMDA;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\_ViewImports.cshtml"
using ServerMDA.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml"
using ServerMDA.ViewModel;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b0cdc6a4785949adba4ade1c079adb26ecef1932", @"/Views/Movie/CreateActor.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f44792abd596afd1ba2515f7ae3cd7cc9ca71375", @"/Views/_ViewImports.cshtml")]
    public class Views_Movie_CreateActor : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<CMovieOneWayViewModel>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 7 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml"
  
    ViewData["Title"] = "CreateActor";
    //Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("<!-- Modal -->\r\n");
#nullable restore
#line 14 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml"
 using (Html.BeginForm("WatchListCreate", "Member"))
{

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <!--<div class=""modal-content"">
        <div class=""modal-header"">
            <h5 class=""modal-title"" id=""exampleModalLongTitle"" style=""color:black"">我的所有片單</h5>
            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                <span aria-hidden=""true"">&times;</span>
            </button>
        </div>
        <div class=""modal-body"">-->
    <!--modal content start-->
<div>

    <table id=""WatchList"" class=""table table-bordered"">
        <thead>
            <tr>
                <th>片單</th>
                <th>移除</th>
            </tr>
        </thead>
        <tbody id=""tableLists"">
        </tbody>
    </table>

    <button type=""button"" id=""btnAddList"" class=""site-btn btn-sm mt-3"">
        <i class=""fa fa-plus"">新增</i>
    </button>
    <div>
        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">取消</button>
        <button type=""button"" class=""btn btn-primary"" id=""submitAddList"">確定</button>
    </div>

    <div c");
            WriteLiteral(@"lass=""mb-2 mt-2"">
        <input type=""text"" list=""typelist"" class=""form-control inputMovie"" id=""inputMovie"" name=""movieName"" placeholder=""演員名稱"">
        <datalist id=""typelist"" class=""typelist""></datalist><small id=""duplicate"" style=""color:darkgray""></small>
    </div>


    <!--modal content end-->
");
            WriteLiteral("\r\n");
            WriteLiteral("    <!--modal end-->\r\n</div>\r\n");
#nullable restore
#line 63 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<script>
            const btnAddList = document.querySelector(""#btnAddList"")
            const listData = document.querySelectorAll("".typelist"")
            const inputName = document.querySelector(""#inputMovie"")
            const inputMovie = document.querySelectorAll("".inputMovie"")

");
            WriteLiteral("            btnAddList.addEventListener(\"click\", async () => {\r\n\r\n            const url = \"");
#nullable restore
#line 73 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml"
                    Write(Url.Content("~/Movie/checkWatchList"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"""
            const params = `?name=${inputName.value}`

            let response = await fetch(url + params)  //resolve->response, reject
            let data = await response.text()
            if (inputName.value == """") {
                duplicate.textContent = ""不可空白""
            }
            else if (data == 'True') {
                duplicate.textContent = ""已有該演員""
            }
            else {
                duplicate.textContent = """"
                inputMovie.textContent=""""
                var tr = document.createElement('tr');
                tr.innerHTML =
                            `
                        <td>
                        <input type=""hidden"" class=""id"" name=""listId"" value="""" />
                        <input type=""text"" class=""form-control name"" name=""listName"" value=""${inputName.value}""/>
                        </td>
                        <td><button type=""button"" onclick=""deleteRow(event)"" class=""btn btn-danger btn-sm delList""><i class=""fas fa-trash-alt");
            WriteLiteral("\"></i></button></td>\r\n                            `\r\n                tableLists.appendChild(tr);\r\n\r\n            }\r\n        })\r\n\r\n");
            WriteLiteral(@"        listData.forEach(item => {
            item.style.display=""none""
        })

        inputMovie.forEach(item => {

            item.addEventListener(""input"", async () => {
                let keyword = item.value
                let results = await fetch(""");
#nullable restore
#line 110 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml"
                                      Write(Url.Content("~/Movie/autoCmpMovie"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""" + `?keyword=${keyword}`)
                let datas = await results.json()
                //console.log(datas)
                let htmlDatas = datas.map(data => {
                    return (
                        `
                <option onclick=""read(event)"">${data}</option>
                `)
                })
                listData.forEach(item => { item.innerHTML = htmlDatas.join("""") })
            })
        })


    const submitAddList = document.querySelector(""#submitAddList"")
    submitAddList.addEventListener(""click"", async () => {
        var ids = document.querySelectorAll('.id')
        var names = document.querySelectorAll('.name')
        for (let i = 0; i < ids.length; i++) {
            ids[i].setAttribute('name', `ls[${i}].listId`)
        }
        for (let i = 0; i < names.length; i++) {
            names[i].setAttribute('name', `ls[${i}].listName`)
        }
        await fetch(""");
#nullable restore
#line 134 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml"
                Write(Url.Content("~/Movie/AS"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\")\r\n    })\r\n    //await submitAddList.setAttribute(\'type\', \'JSON\')\r\n    //await fetch(\"");
#nullable restore
#line 137 "C:\Users\Student\Documents\ServerMDA-\ServerMDA\Views\Movie\CreateActor.cshtml"
              Write(Url.Content("~/api/getmemID"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\")\r\n\r\n\r\n\r\n</script>\r\n\r\n");
            WriteLiteral("<script>\r\n    function deleteRow(event) {\r\n        event.target.closest(\'tr\').remove();\r\n    }\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<CMovieOneWayViewModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
