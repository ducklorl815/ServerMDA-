@using ServerMDA.ViewModel
@model CMovieImagesListViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = null;
}
<style>
    .divEmpty {
        margin: 310px;
    }
</style>

<link href="~/css/bootstrap-5.2.2/bootstrap.min.css" rel="stylesheet" />
<link href="~/css/bootstrap-5.2.2/YukabtnEdit.css" rel="stylesheet" />
<link href="~/css/site.css" rel="stylesheet" />

<div class="row">
    <form asp-action="Edit" enctype="multipart/form-data">
        <div class="col-12">
            <div class="d-flex flex-row">
                <div class="col-6">
                    <h4 class="">
                        修改編號 : @Model.電影圖片編號miId  圖片內容
                    </h4>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="電影圖片編號miId" />
                    <div class="form-group">
                        <input type="hidden" id="movieId" value="@Model.電影編號movieId" />
                        <label class="control-label">來源</label>
                        <select asp-for="電影編號movieId" name="中文標題titleCht" class="form-control" asp-items="ViewBag.電影編號movieId">
                            <option selected>@Model.中文標題titleCht</option>
                            @{
                                var g = @Model.中文標題titleCht;
                                foreach (var i in Model.titleChtList)
                                {
                                    @if (i != g)
                                    {
                                        <option>@i</option>
                                    }
                                }
                            }
                        </select>
                        <span asp-validation-for="電影編號movieId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">電影圖片</label>
                        <input type="file" name="photo" />
                    </div>
                    <div class="divEmpty">

                    </div>
                    <div class="form-group" style="float:right">
                        <input type="submit" value="確認修改" class="btn btn-yuka mb-1 mr-3" />
                        <button type="button" class="btn btn-secondary mb-1 mr-3" data-bs-dismiss="modal" aria-label="Close">回到清單</button>
                    </div>
                </div>
                <div class="col-6">

                    <div class="form-group">
                        <label asp-for="圖片image" class="control-label"></label>
                        @*<input asp-for="圖片image" disabled="disabled" class="form-control" />*@
                        @*<span asp-validation-for="圖片image" class="text-danger"></span>*@
                        <div>
                            <img src="~/images/MovieImage/@Model.圖片image" height="500" overflow="hidden" />
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </form>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script src="~/js/bootstrap-5.2.2/bootstrap.min.js"></script>
<script src="~/js/bootstrap-5.2.2/bootstrap.bundle.js"></script>
<script>
    @*let imglist = document.querySelector("#imglist");
    let imgval = $('#imgli').val();
    async function Loadimglit() {
        let response = await fetch("@Url.Content("~/MovieIimagesList/imglist")" + `?id=${imgval}`)
        let datas = await response.json()
        datas.forEach(mov => {
            const opt = new Image(mov, mov)
            imglist.options.add(opt)
        })
    };
    document.getElementById("imglist").addEventListener('blur', Loadimglit)*@



    @*async function LoadselMovs() {
                let movId = $('#movieId').val();
                let selMov = document.querySelector("#selectMovieId")
                let response = await fetch("@Url.Content("~/MovieIimagesList/moving")" + `?id=${movId}`)
                let datas = await response.json()
                datas.forEach(mov => {
                const opt = new Option(mov, mov)
                selMov.options.add(opt)
            })
        };*@
    @*async function LoadselMovs() {
                let movId = $('#movieId').val();
                let selMov = document.querySelector("#selectMovieId")
                let response = await fetch("@Url.Content("~/MovieIimagesList/moving")" + `?id=${movId}`)
                let datas = await response.json()
                datas.forEach(mov => {
                const opt = new Option(mov, mov)
                selMov.options.add(opt)
            })
        };
    async function LoadimageName() {
                let imaId = $('#imageId').val();
                let selImage = document.querySelector("#selectImageId")
                let response = await fetch("@Url.Content("~/MovieIimagesList/imageing")" + `?id=${imaId}`)
                let datas = await response.json()
                datas.forEach(Image => {
                const opt = new Option(Image, Image)
                selImage.options.add(opt)
            })
        };
    LoadselMovs();
    LoadimageName();*@
</script>